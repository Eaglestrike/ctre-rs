use ctre::Result;
use ctre::bindings::*;

trait BaseMotorController {
    fn get_handle(&self) -> Handle;

{% for header in headers %}
{% for fn in header.functions %}
    fn {{ fn.meth_name }}(&self, {{ fn.in_params | join(', ', attribute='rust_decl') }}){% if fn.rust_returns %} -> {{ fn.rust_returns }}{% endif %} {
    {% if fn.out_params %}
        cci_get_call!({{ fn.name }}(
            self.get_handle(),
            {% for p in fn.parameters[1:] %}
            {% if p.pointer %}
            _: {{ p.rust_type }},
            {% else %}
            {{ p.snake_name }},
            {% endif %}
            {% endfor %}
        ))
    {% else %}
        unsafe {
            {{ fn.name }}(self.get_handle(), {{ fn.in_params | join(', ', attribute='snake_name') }})
        }
    {% endif %}
    }

{% endfor %}
{% endfor %}
}
